{{- if .Values.nodeClass.enabled }}
# EC2NodeClass defines the configuration for EC2 instances launched by Karpenter
apiVersion: karpenter.k8s.aws/v1
kind: EC2NodeClass
metadata:
  name: {{ .Values.nodeClass.name }}
spec:
  # Kubelet configuration for system resources and overhead
  kubelet:
    podsPerCore: {{ .Values.nodeClass.kubelet.podsPerCore }}
    maxPods: {{ .Values.nodeClass.kubelet.maxPods }}
    systemReserved:
      cpu: {{ .Values.nodeClass.kubelet.systemReserved.cpu }}
      memory: {{ .Values.nodeClass.kubelet.systemReserved.memory }}
      ephemeral-storage: {{ .Values.nodeClass.kubelet.systemReserved.ephemeralStorage }}
    kubeReserved:
      cpu: {{ .Values.nodeClass.kubelet.kubeReserved.cpu }}
      memory: {{ .Values.nodeClass.kubelet.kubeReserved.memory }}
      ephemeral-storage: {{ .Values.nodeClass.kubelet.kubeReserved.ephemeralStorage }}
    evictionHard:
      memory.available: {{ .Values.nodeClass.kubelet.evictionHard.memoryAvailable }}
      nodefs.available: {{ .Values.nodeClass.kubelet.evictionHard.nodefsAvailable }}
      nodefs.inodesFree: {{ .Values.nodeClass.kubelet.evictionHard.nodefsInodesFree }}
    evictionSoft:
      memory.available: {{ .Values.nodeClass.kubelet.evictionSoft.memoryAvailable }}
      nodefs.available: {{ .Values.nodeClass.kubelet.evictionSoft.nodefsAvailable }}
      nodefs.inodesFree: {{ .Values.nodeClass.kubelet.evictionSoft.nodefsInodesFree }}
    evictionSoftGracePeriod:
      memory.available: {{ .Values.nodeClass.kubelet.evictionSoftGracePeriod.memoryAvailable }}
      nodefs.available: {{ .Values.nodeClass.kubelet.evictionSoftGracePeriod.nodefsAvailable }}
      nodefs.inodesFree: {{ .Values.nodeClass.kubelet.evictionSoftGracePeriod.nodefsInodesFree }}
    evictionMaxPodGracePeriod: {{ .Values.nodeClass.kubelet.evictionMaxPodGracePeriod }}
    imageGCHighThresholdPercent: {{ .Values.nodeClass.kubelet.imageGCHighThresholdPercent }}
    imageGCLowThresholdPercent: {{ .Values.nodeClass.kubelet.imageGCLowThresholdPercent }}
    cpuCFSQuota: {{ .Values.nodeClass.kubelet.cpuCFSQuota }}

  # IAM role for the nodes
  role: {{ .Values.nodeClass.role }}

  # AMI configuration
  amiSelectorTerms:
    - alias: {{ .Values.nodeClass.amiSelectorTerms.alias }}

  # Block device mappings
  blockDeviceMappings:
    # Root device for OS
    - deviceName: {{ .Values.nodeClass.blockDeviceMappings.root.deviceName }}
      ebs:
        volumeSize: {{ .Values.nodeClass.blockDeviceMappings.root.volumeSize }}
        volumeType: {{ .Values.nodeClass.blockDeviceMappings.root.volumeType }}
        encrypted: {{ .Values.nodeClass.blockDeviceMappings.root.encrypted }}
        deleteOnTermination: {{ .Values.nodeClass.blockDeviceMappings.root.deleteOnTermination }}
    # Data device for container resources
    - deviceName: {{ .Values.nodeClass.blockDeviceMappings.data.deviceName }}
      ebs:
        volumeSize: {{ .Values.nodeClass.blockDeviceMappings.data.volumeSize }}
        volumeType: {{ .Values.nodeClass.blockDeviceMappings.data.volumeType }}
        encrypted: {{ .Values.nodeClass.blockDeviceMappings.data.encrypted }}
        deleteOnTermination: {{ .Values.nodeClass.blockDeviceMappings.data.deleteOnTermination }}

  # Subnet selection based on cluster tags
  subnetSelectorTerms:
    - tags:
        karpenter.sh/discovery: {{ .Values.clusterName }}

  # Security group selection based on cluster tags
  securityGroupSelectorTerms:
    - tags:
        karpenter.sh/discovery: {{ .Values.clusterName }}
{{- end }}
