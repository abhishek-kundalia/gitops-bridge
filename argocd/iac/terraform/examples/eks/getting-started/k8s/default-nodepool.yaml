# NodePool defines how Karpenter should provision and manage nodes
apiVersion: karpenter.sh/v1
kind: NodePool
metadata:
  name: default
spec:
  # Template defines the configuration for nodes that Karpenter will provision
  template:
    spec:
      # Requirements specify constraints for node provisioning
      requirements:
        # Support both ARM64 (e.g., m6g, c6g) and AMD64 (e.g., c5) architectures
        - key: kubernetes.io/arch
          operator: In
          values: ["arm64", "amd64"]

        # Only provision Linux nodes
        - key: kubernetes.io/os
          operator: In
          values: ["linux"]

        # Allow both spot and on-demand instances
        - key: karpenter.sh/capacity-type
          operator: In
          values: ["spot", "on-demand"]

        # Specify allowed instance families
        - key: karpenter.k8s.aws/instance-family
          operator: In
          values: ["m6g", "c6g", "c7g", "t4g", "i4g", "im4gn", "c5"]

        # Allow instance sizes from nano to 2xlarge
        - key: karpenter.k8s.aws/instance-size
          operator: In
          values: ["nano","micro", "small", "medium", "large", "xlarge", "2xlarge"]

      # Reference to the EC2NodeClass
      nodeClassRef:
        group: karpenter.k8s.aws
        kind: EC2NodeClass
        name: default

      # Node expiration configuration
      expireAfter: 168h # 7 * 24h = 168h

  # Maximum CPU cores allowed across all nodes in this pool
  limits:
    cpu: 1000

  # Node consolidation and disruption settings
  disruption:
    consolidationPolicy: WhenEmptyOrUnderutilized
    consolidateAfter: 30s
    budgets:
      # Work Hours (Mon-Fri, 9 AM - 9 PM IST)
      - nodes: "10%"
        schedule: "0 9 * * 1-5"
        duration: "12h"

      # Night Hours (Mon-Fri, 9 PM - 9 AM IST)
      - nodes: "50%"
        schedule: "0 21 * * 1-5"
        duration: "12h"

      # Weekend (Sat-Sun)
      - nodes: "10%"
        schedule: "0 0 * * 0,6"
        duration: "24h"
