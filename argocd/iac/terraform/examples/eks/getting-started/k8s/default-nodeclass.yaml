# EC2NodeClass defines the configuration for EC2 instances launched by Karpenter
apiVersion: karpenter.k8s.aws/v1
kind: EC2NodeClass
metadata:
  name: default
spec:
  # Kubelet configuration for system resources and overhead
  kubelet:
    podsPerCore: 10
    maxPods: 110
    systemReserved:
      cpu: "200m"
      memory: "200Mi"
      ephemeral-storage: "1Gi"
    kubeReserved:
      cpu: "100m"
      memory: "100Mi"
      ephemeral-storage: "1Gi"
    evictionHard:
      memory.available: "5%"
      nodefs.available: "10%"
      nodefs.inodesFree: "10%"
    evictionSoft:
      memory.available: "500Mi"
      nodefs.available: "15%"
      nodefs.inodesFree: "15%"
    evictionSoftGracePeriod:
      memory.available: "1m"
      nodefs.available: "1m"
      nodefs.inodesFree: "1m"
    evictionMaxPodGracePeriod: 60
    imageGCHighThresholdPercent: 85
    imageGCLowThresholdPercent: 80
    cpuCFSQuota: true

  # IAM role for the nodes
  role: "karpenter-eks-blueprint-gitops"

  # Bottlerocket AMI configuration with specific version
  amiSelectorTerms:
    - alias: "bottlerocket@v1.32.0"  # Using Bottlerocket version 1.31.0

  # Block device mappings for Bottlerocket OS
  blockDeviceMappings:
    # Root device for OS
    - deviceName: /dev/xvda
      ebs:
        volumeSize: "4Gi"
        volumeType: gp3
        encrypted: true
        deleteOnTermination: true
    # Data device for container resources (images and logs)
    - deviceName: /dev/xvdb
      ebs:
        volumeSize: "20Gi"
        volumeType: gp3
        encrypted: true
        deleteOnTermination: true

  # Node configuration via userData
  # userData: |
  #   [settings.kubernetes]
  #   api-server = "https://0E8BBAF852397CB8823F5AF07A5499ED.gr7.ap-southeast-1.eks.amazonaws.com"
  #   cluster-name = "dev-pocketfm-qa-k8s"
    
  #   # Enable SSM and admin access for node management
  #   [settings.host-containers.ssm]
  #   enabled = true
  #   [settings.host-containers.admin]
  #   enabled = true
  #   superpowered = true

  #   # System settings for optimal performance and security
  #   [settings.kernel]
  #   lockdown = "integrity"
    
  #   # Container runtime configuration
  #   [settings.container-runtime]
  #   max-containers = 200
  #   enable-unprivileged-ports = true
  #   enable-unprivileged-icmp = true

  #   # Update settings - using specific version for stability
  #   [settings.updates]
  #   metadata-urls = ["https://updates.bottlerocket.aws"]
  #   version-lock = "1.31.0"  # Pin to specific Bottlerocket version

  #   # Boot settings for enhanced security
  #   [settings.boot]
  #   boot-keys = true          # Enable secure boot for enhanced security
  #   reboot-to-reconcile = false  # Prevent automatic reboots during updates

  #   # Enable node metrics collection
  #   [settings.metrics]
  #   enabled = true           # Enable collection of node-level metrics

  # Subnet selection based on cluster tags
  subnetSelectorTerms:
    - tags:
        karpenter.sh/discovery: karpenter

  # Security group selection based on cluster tags
  securityGroupSelectorTerms:
    - tags:
        karpenter.sh/discovery: karpenter
